name: CI on Merge to Main

on:
  push:
    branches:
      - milestone4  # Triggers when code is pushed to the milestone4 branch

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Check out repository code
        uses: actions/checkout@v4
      - id: 'auth'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'

      # Step 2: Set up Python environment (specifically Python 3.12)
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 2.1: Set PYTHONPATH to include the root directory (or src if relevant)
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV  # Adds current directory to PYTHONPATH

      # Step 3: Install pytest and pytest-cov for coverage
      - name: Install pytest and pytest-cov
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov flake8 
          
      # Step 4: Run Flake8
      - name: Run Flake8
        run: flake8 .

      # Step 2: Set up Docker
      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      # Step 5: Run pytest with coverage and generate HTML report
      - name: Run tests with coverage
        run: |
          cd ${{ github.workspace }}/scraping/
          docker build -t llm-scraping -f Dockerfile .

      - name: Run Test
        env:
          GCP_PROJECT: bloodwise-ai
          GCP_ZONE: us-central1-a
          GCS_BUCKET_NAME: bloodwise-rag-knowledge-base
          GCS_SERVICE_ACCOUNT: llm-service-account@bloodwise-ai.iam.gserviceaccount.com
          GCP_REGION: us-central1
          GOOGLE_APPLICATION_CREDENTIALS: /workspace/credentials.json

        run: |
          docker run --rm \
            -v /tmp/credentials.json:/workspace/credentials.json \
            -e GOOGLE_APPLICATION_CREDENTIALS=/workspace/credentials.json \
            -e GCP_PROJECT=${GCP_PROJECT} \
            -e GCP_ZONE=${GCP_ZONE} \
            -e GCS_BUCKET_NAME=${GCS_BUCKET_NAME} \
            -e GCS_SERVICE_ACCOUNT=${GCS_SERVICE_ACCOUNT} \
            -e GCP_REGION=${GCP_REGION} \
            llm-scraping \
            pip install pytest
            pytest tests/test_scrape.py -v

      # Step 6: Upload coverage report as an artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov  # The folder where pytest-cov stores HTML reports